{"version":3,"sources":["CountyInfoLine.js","CountyInfo.js","charts.js","MapChart.js","index.js"],"names":["CasesLine","_ref","rec","key","date","react_default","a","createElement","substring","cases","deaths","cumulative_cases","cumulative_deaths","HospitalizationsLine","_ref2","total_patients","hospitalized_covid_confirmed_patients","hospitalized_covid_suspected_patients","todays_date","parseInt","all_hospital_beds","icu_covid_confirmed_patients","icu_covid_suspected_patients","icu_available_beds","HomelessLine","_ref3","rooms","rooms_occupied","trailers_requested","trailers_delivered","donated_trailers_delivered","SurgeFacLine","_ref4","type_of_facility","status","beds_ready_to_accept_patients","patients_in_beds","beds_in_warm_status","CountyInfoLine","_ref5","name","CountyInfoLine_CasesLine","CountyInfoLine_HospitalizationsLine","CountyInfoLine_HomelessLine","CountyInfoLine_SurgeFacLine","CountyInfo","chart","countyInfo","Fragment","className","county","Parser","thead","records","map","record","src_CountyInfoLine","charts","title","oldNew","oldUrl","url","hospitalizations","homeless","surgeFac","memo","setTooltipContent","_useState","useState","_useState2","Object","slicedToArray","setChart","_useState3","_useState4","setCountyInfo","console","log","class","onClick","style","fontSize","index_umd","data-tip","projection","projectionConfig","rotate","scale","width","height","geography","geographies","geo","rsmKey","fill","stroke","strokeWidth","onMouseEnter","NAME","properties","concat","onMouseLeave","newUrl","fetch","then","response","json","data","sortedData","result","sort","b","handleClickCounty","default","outline","hover","pressed","src_CountyInfo","App","content","setContent","src_MapChart","index_es","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5d441d9b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CasesLine = ({ rec, key }) => {\n  //<td>{rec.newcountconfirmed || \"none\"}</td>\n  //<td>{rec.newcountdeaths || \"none\"}</td>\n  //<td>{~~rec.totalcountconfirmed || \"none\"}</td>\n  //<td>{~~rec.totalcountdeaths || \"none\"}</td>\n  if (rec.date === null) {\n    return null;\n  }\n  return (\n    <tr>\n      <td>{rec.date.substring(0, 10)}</td>\n      <td>{rec.cases || \"none\"}</td>\n      <td>{rec.deaths || \"none\"}</td>\n      <td>{~~rec.cumulative_cases || \"none\"}</td>\n      <td>{~~rec.cumulative_deaths || \"none\"}</td>\n    </tr>\n  );\n};\n\nconst HospitalizationsLine = ({ rec, key }) => {\n  let total_patients = 0;\n  if (rec.hospitalized_covid_confirmed_patients) {\n    total_patients += rec.hospitalized_covid_confirmed_patients;\n  }\n  if (rec.hospitalized_covid_suspected_patients) {\n    total_patients += rec.hospitalized_covid_suspected_patients;\n  }\n  return (\n    <tr>\n      <td>{rec.todays_date.substring(0, 10)}</td>\n      <td>{parseInt(rec.hospitalized_covid_confirmed_patients) || \"none\"}</td>\n      <td>{parseInt(rec.hospitalized_covid_suspected_patients) || \"none\"}</td>\n      <td>{parseInt(total_patients)}</td>\n      <td>{parseInt(rec.all_hospital_beds) || \"none\"}</td>\n      <td>{parseInt(rec.icu_covid_confirmed_patients) || \"none\"}</td>\n      <td>{parseInt(rec.icu_covid_suspected_patients) || \"none\"}</td>\n      <td>{parseInt(rec.icu_available_beds) || \"none\"}</td>\n    </tr>\n  );\n};\n\nconst HomelessLine = ({ rec, key }) => {\n  return (\n    <tr>\n      <td>{rec.date.substring(0, 10)}</td>\n      <td>{rec.rooms || \"none\"}</td>\n      <td>{rec.rooms_occupied || \"none\"}</td>\n      <td>{rec.trailers_requested || \"none\"}</td>\n      <td>{rec.trailers_delivered || \"none\"}</td>\n      <td>{rec.donated_trailers_delivered || \"none\"}</td>\n    </tr>\n  );\n};\n\nconst SurgeFacLine = ({ rec, key }) => {\n  return (\n    <tr>\n      <td>{rec.date.substring(0, 10)}</td>\n      <td>{rec.type_of_facility}</td>\n      <td>{rec.status}</td>\n      <td>{rec.beds_ready_to_accept_patients || \"none\"}</td>\n      <td>{rec.patients_in_beds || \"none\"}</td>\n      <td>{rec.beds_in_warm_status || \"none\"}</td>\n    </tr>\n  );\n};\n\nconst CountyInfoLine = ({ name, rec, key }) => {\n  //  why can I not put the component name into a variable??  e.g.\n  const LineName = \"HomelessLine\";\n  if (name === \"cases\") {\n    return <CasesLine rec={rec} key={key} />;\n  }\n  if (name === \"hospitalizations\") {\n    return <HospitalizationsLine rec={rec} key={key} />;\n  }\n  if (name === \"homeless\") {\n    return <HomelessLine rec={rec} key={key} />;\n  }\n  if (name === \"surgeFac\") {\n    return <SurgeFacLine rec={rec} key={key} />;\n  }\n};\n\nexport default CountyInfoLine;\n","import React from \"react\";\nimport Parser from \"html-react-parser\";\nimport CountyInfoLine from \"./CountyInfoLine\";\n\nconst CountyInfo = ({ chart, countyInfo }) => {\n  if (countyInfo === null) {\n    return <p>no county</p>;\n  }\n  var key = 0;\n  return (\n    <>\n      <div className=\"countyInfo\">\n        <h4>{countyInfo.county}</h4>\n        <div className=\"countyTableWrap\">\n          <table>\n            {Parser(chart.thead)}\n            <tbody>\n              {countyInfo.records.map((record) => {\n                key++;\n                return (\n                  <CountyInfoLine name={chart.name} rec={record} key={key} />\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CountyInfo;\n\n/*\n<CountyInfoLine key={key} rec={record} tline={chart.tline} />\n\n*/\n","const charts = {\n  cases: {\n    name: \"cases\",\n    title: \"Cases by County\",\n    oldNew: \"new\",\n    oldUrl: `https://data.ca.gov/api/3/action/datastore_search_sql?sql=SELECT * from \"926fd08f-cc91-4828-af38-bd45de97f8c3\"`,\n    url: `https://data.chhs.ca.gov/api/3/action/datastore_search_sql?sql=SELECT * from \"046cdd2b-31e5-4d34-9ed3-b48cdbc4be7a\"`,\n    thead: `<thead><tr><th>Date</th><th>New<br />Cases</th><th>New<br />Deaths</th><th>Total<br />Cases</th><th>Total<br />Deaths</th>\n    </tr></thead>`,\n  },\n  hospitalizations: {\n    name: \"hospitalizations\",\n    title: \"Hospitalizations\",\n    oldUrl: `https://data.ca.gov/api/3/action/datastore_search_sql?sql=SELECT * from \"42d33765-20fd-44b8-a978-b083b7542225\"`,\n    url: `https://data.chhs.ca.gov/api/3/action/datastore_search_sql?sql=SELECT * from \"47af979d-8685-4981-bced-96a6b79d3ed5\"`,\n    thead: `<thead><tr><th>Date</th><th>Confirmed<br />Patients</th><th>Suspected<br />Patients</th><th>Total<br />Patients</th><th>All<br />Beds</th><th>ICU<br />Confirmed<br />Patients</th><th>ICU<br />Suspected<br />Patients</th><th>ICU<br />Avail<br />Beds</th></tr></thead>`,\n  },\n  homeless: {\n    name: \"homeless\",\n    title: \"Homeless Impact\",\n    url: `https://data.ca.gov/api/3/action/datastore_search_sql?sql=SELECT * from \"235466b6-0eb9-4ff7-a4b4-8138f474ce83\"`,\n    thead: `<thead><tr><th>Date</th><th>Rooms</th><th>Rooms<br />Occupied</th><th>Trailers<br />Requested</th><th>Trailers<br />Delivered</th><th>Donated<br />Trailers<br />Delivered</th>\n    </tr></thead>`,\n  },\n  surgeFac: {\n    name: \"surgeFac\",\n    title: \"Medical Surge Facilities\",\n    url: `https://data.ca.gov/api/3/action/datastore_search_sql?sql=SELECT * from \"ef6675e7-cd3a-4762-ba75-2ef78d6dc334\"`,\n    thead: `<thead><tr><th>Date</th><th>Type of<br />Facility</th><th>Status</th><th>Beds Ready<br />for Patients</th><th>Patients<br />in Beds</th><th>Beds in<br />Warm Status</th>\n    </tr></thead>`,\n  },\n};\n\nexport default charts;\n","//  to do: make it so county stays when selecting a different category\nimport React, { useState, memo } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport CountyInfo from \"./CountyInfo\";\nimport charts from \"./charts\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/deldersveld/topojson/master/countries/us-states/CA-06-california-counties.json\";\n\nconst MapChart = ({ setTooltipContent }) => {\n  const [chart, setChart] = useState(charts[\"cases\"]);\n  const [countyInfo, setCountyInfo] = useState(null);\n\n  const handleClickCounty = (county) => {\n    const oldUrl = `${chart.url} WHERE \"county\" LIKE '${county}%'`;\n    const newUrl = `${chart.url} WHERE \"area\" LIKE '${county}%'`;\n    const url = chart.oldNew && chart.oldNew === \"new\" ? newUrl : oldUrl;\n    console.log(\"url: \", url);\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        //  this sorts correctly in firefox, not in chrome or safari\n        const sortedData = data.result.records.sort((a, b) => {\n          if (b.date > a.date) return 1;\n          if (a.date > b.date) return 1;\n          return 0;\n        });\n        const info = {\n          county: county,\n          records: sortedData,\n        };\n        setCountyInfo(info);\n      });\n  };\n\n  return (\n    <>\n      {console.log(countyInfo)}\n      <div class=\"button-row\">\n        <div\n          class=\"button\"\n          onClick={() => {\n            setCountyInfo(null);\n            setChart(charts[\"cases\"]);\n          }}\n        >\n          Cases\n        </div>\n        <div\n          class=\"button\"\n          onClick={() => {\n            setCountyInfo(null);\n            setChart(charts[\"hospitalizations\"]);\n          }}\n        >\n          Hospitalizations\n        </div>\n        <div\n          class=\"button\"\n          onClick={() => {\n            setCountyInfo(null);\n            setChart(charts[\"homeless\"]);\n          }}\n        >\n          Homeless\n        </div>\n        <div\n          class=\"button\"\n          onClick={() => {\n            setCountyInfo(null);\n            setChart(charts[\"surgeFac\"]);\n          }}\n        >\n          Medical Surge Facilities\n        </div>\n      </div>\n      <h2>COVID-19 {chart.title}</h2>\n      <p style={{ fontSize: \".7rem\" }}>Click county for stats</p>\n      <div className=\"map\">\n        <ComposableMap\n          data-tip=\"\"\n          projection=\"geoAzimuthalEqualArea\"\n          projectionConfig={{\n            rotate: [122, -30, 0],\n            scale: 1200,\n          }}\n          width={400}\n          height={500}\n          style={{\n            width: \"auto\",\n            height: \"50%\",\n          }}\n        >\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill=\"#D6D6DA\"\n                  stroke=\"#FFF\"\n                  strokeWidth=\".5px\"\n                  onMouseEnter={() => {\n                    const { NAME } = geo.properties;\n                    setTooltipContent(`${NAME}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  onClick={() => handleClickCounty(geo.properties.NAME)}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\",\n                    },\n                    hover: {\n                      fill: \"#776274\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#5a5353\",\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ComposableMap>\n      </div>\n\n      <CountyInfo chart={chart} countyInfo={countyInfo} />\n    </>\n  );\n};\n\nexport default memo(MapChart);\n\n/*\n\n*/\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./styles.css\";\n\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n      <ReactTooltip>{content}</ReactTooltip>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}